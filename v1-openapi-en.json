{
  "openapi": "3.0.1",
  "info": {
    "title": "AIHubMix API",
    "description": "AIHubMix provides API services for multiple AI models. The endpoints are fully compatible with the OpenAI specification, so you can use them as a drop-in replacement for the official SDKs.\n\nGet your API key: [https://aihubmix.com/token/add](https://aihubmix.com/token/add)\nView available models: [https://aihubmix.com/models](https://aihubmix.com/models)",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://aihubmix.com/v1",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/chat/completions": {
      "post": {
        "summary": "Create chat completion",
        "description": "Generate an AI response based on the provided messages. Supports multiple models and tunable parameters.",
        "x-codeSamples": [
          {
            "lang": "python",
            "label": "Python",
            "source": "from openai import OpenAI\n\nclient = OpenAI(\n    base_url=\"https://aihubmix.com/v1\",\n    api_key=\"AIHUBMIX_API_KEY\"\n)\n\ncompletion = client.chat.completions.create(\n    model=\"gpt-3.5-turbo\",\n    messages=[{\"role\": \"user\", \"content\": \"Hello\"}]\n)\n\nprint(completion.choices[0].message)"
          },
          {
            "lang": "javascript",
            "label": "Node.js",
            "source": "import OpenAI from 'openai';\n\nconst openai = new OpenAI({\n  baseURL: 'https://aihubmix.com/v1',\n  apiKey: 'AIHUBMIX_API_KEY'\n});\n\nasync function main() {\n  const completion = await openai.chat.completions.create({\n    model: 'gpt-3.5-turbo',\n    messages: [\n      {\n        'role': 'user',\n        'content': 'Hello'\n      }\n    ]\n  });\n\n  console.log(completion.choices[0].message);\n}\n\nmain();"
          },
          {
            "lang": "curl",
            "label": "Curl",
            "source": "curl https://aihubmix.com/v1/chat/completions \\\n  -H \"Authorization: Bearer AIHUBMIX_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d \"{\\\"model\\\": \\\"gpt-3.5-turbo\\\",\\\"messages\\\": [{\\\"role\\\": \\\"user\\\", \\\"content\\\": \\\"Hello\\\"}]}\""
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["model", "messages"],
                "properties": {
                  "model": {
                    "type": "string",
                    "description": "Model ID to use. Check in the [Model Hub](https://aihubmix.com/models)."
                  },
                  "messages": {
                    "type": "array",
                    "description": "Conversation messages including role and content.",
                    "items": {
                      "type": "object",
                      "required": ["role", "content"],
                      "properties": {
                        "role": {
                          "type": "string",
                          "description": "Message role. Supported values include user, assistant, system, developer, etc."
                        },
                        "content": {
                          "type": "string",
                          "description": "Message content."
                        }
                      }
                    }
                  },
                  "temperature": {
                    "type": "number",
                    "description": "Sampling temperature (0-2). Higher values yield more randomness.",
                    "default": 0.8
                  },
                  "max_tokens": {
                    "type": "integer",
                    "description": "Maximum number of tokens to generate (depends on model).",
                    "default": 1024
                  },
                  "top_p": {
                    "type": "number",
                    "description": "Top-p nucleus sampling parameter controlling diversity.",
                    "default": 1
                  },
                  "frequency_penalty": {
                    "type": "number",
                    "description": "Frequency penalty to reduce repetition.",
                    "default": 0
                  },
                  "presence_penalty": {
                    "type": "number",
                    "description": "Presence penalty to encourage new topics.",
                    "default": 0
                  },
                  "stream": {
                    "type": "boolean",
                    "description": "Enable streaming responses for real-time output.",
                    "default": false
                  },
                  "web_search_options": {
                    "type": "object",
                    "description": "Web search options (only supported by specific search models)."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "choices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "description": "Message role, usually 'assistant'."
                              },
                              "content": {
                                "type": "string",
                                "description": "Generated reply content."
                              }
                            }
                          },
                          "finish_reason": {
                            "type": "string",
                            "description": "Reason the generation finished (e.g., stop, length)."
                          }
                        }
                      }
                    },
                    "usage": {
                      "type": "object",
                      "properties": {
                        "prompt_tokens": {
                          "type": "integer",
                          "description": "Number of tokens in the prompt."
                        },
                        "completion_tokens": {
                          "type": "integer",
                          "description": "Number of tokens in the completion."
                        },
                        "total_tokens": {
                          "type": "integer",
                          "description": "Total tokens consumed."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Bearer authentication. Add Authorization: Bearer AIHUBMIX_API_KEY in request headers. Get your API key [here](https://aihubmix.com/token/add)."
      }
    }
  }
} 